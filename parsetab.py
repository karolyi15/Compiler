
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDCALLBEGINDOCrightPROCEDURErightDECLARErightASSIGNleftPLUSMINUSleftTIMESDIVIDEleftLPARENRPARENASSIGN BEGIN CALL CASE COMMA COMMENT DECLARE DIVIDE DOC ELSE END EQUAL FOR GT GTE ID IMPORT LOOPS LPAREN LT LTE MINUS NUMBER PLUS PROCEDURE RPAREN SEMMICOLOM THEN TIMES WHENprogram : COMMENT importDeclare blockblock : varDeclare procedureDeclare statementimportDeclare : IMPORT DOC SEMMICOLOM importDeclareimportDeclare : emptyvarDeclare : DECLARE varDeclareList SEMMICOLOM varDeclarevarDeclare : emptyvarDeclareList : IDvarDeclareList : varDeclareList COMMA IDvarDeclareList : ID ASSIGN NUMBERvarDeclareList : varDeclareList COMMA ID ASSIGN NUMBERprocedureDeclare : PROCEDURE ID LPAREN parameter RPAREN BEGIN block END SEMMICOLOM procedureDeclareprocedureDeclare : emptyparameter : factorparameter : parameter COMMA factorparameter : emptystatement : CALL ID LPAREN parameter RPAREN SEMMICOLOM statementstatement : ID ASSIGN expression SEMMICOLOM statementstatement : emptystatement : FOR NUMBER LOOPS statement END SEMMICOLOM statementstatement : CASE caseList ELSE statement END SEMMICOLOM statementstatement : ID ASSIGN CALL ID LPAREN parameter RPAREN SEMMICOLOM statementcaseList : WHEN condition THEN statementcaseList : WHEN condition THEN statement caseListcondition : expression relation expressionrelation : EQUALrelation : GTrelation : GTErelation : LTrelation : LTEexpression : termexpression : addOperator termexpression : expression addOperator termaddOperator : PLUSaddOperator : MINUSterm : factorterm : term multiOperator factormultiOperator : TIMESmultiOperator : DIVIDEfactor : IDfactor : NUMBERfactor : LPAREN expression RPARENempty :'
    
_lr_action_items = {'COMMENT':([0,],[2,]),'$end':([1,2,3,5,6,7,9,11,13,16,17,20,24,27,34,57,78,89,91,92,95,97,98,100,101,102,103,],[0,-42,-42,-4,-1,-42,-6,-42,-12,-42,-2,-18,-42,-3,-5,-42,-17,-42,-42,-42,-16,-19,-20,-42,-42,-21,-11,]),'IMPORT':([2,16,],[4,4,]),'DECLARE':([2,3,5,16,24,27,87,],[-42,8,-4,-42,8,-3,8,]),'PROCEDURE':([2,3,5,7,9,16,24,27,34,87,101,],[-42,-42,-4,12,-6,-42,-42,-3,-5,-42,12,]),'CALL':([2,3,5,7,9,11,13,16,24,27,29,34,48,49,57,67,87,89,91,92,100,101,103,],[-42,-42,-4,-42,-6,18,-12,-42,-42,-3,40,-5,18,18,18,18,-42,18,18,18,18,-42,-11,]),'ID':([2,3,5,7,8,9,11,12,13,16,18,24,25,27,29,32,33,34,37,40,41,43,45,46,48,49,57,58,61,62,63,67,68,69,70,71,72,73,75,80,87,89,91,92,100,101,103,],[-42,-42,-4,-42,15,-6,19,23,-12,-42,28,-42,35,-3,38,38,38,-5,38,59,38,38,-33,-34,19,19,19,38,38,-37,-38,19,38,-25,-26,-27,-28,-29,38,38,-42,19,19,19,19,-42,-11,]),'FOR':([2,3,5,7,9,11,13,16,24,27,34,48,49,57,67,87,89,91,92,100,101,103,],[-42,-42,-4,-42,-6,21,-12,-42,-42,-3,-5,21,21,21,21,-42,21,21,21,21,-42,-11,]),'CASE':([2,3,5,7,9,11,13,16,24,27,34,48,49,57,67,87,89,91,92,100,101,103,],[-42,-42,-4,-42,-6,22,-12,-42,-42,-3,-5,22,22,22,22,-42,22,22,22,22,-42,-11,]),'DOC':([4,],[10,]),'END':([7,9,11,13,17,20,24,34,48,49,57,65,66,78,87,89,91,92,94,95,97,98,100,101,102,103,],[-42,-6,-42,-12,-2,-18,-42,-5,-42,-42,-42,83,84,-17,-42,-42,-42,-42,99,-16,-19,-20,-42,-42,-21,-11,]),'SEMMICOLOM':([10,14,15,35,36,38,39,42,44,47,64,76,77,79,81,82,83,84,96,99,],[16,24,-7,-8,-9,-39,57,-30,-35,-40,-31,-10,89,-32,-41,-36,91,92,100,101,]),'COMMA':([14,15,33,35,36,37,38,47,52,53,54,56,76,80,81,88,90,],[25,-7,-42,-8,-9,-42,-39,-40,75,-13,-15,75,-10,-42,-41,-14,75,]),'ASSIGN':([15,19,35,],[26,29,55,]),'WHEN':([20,22,57,67,78,85,89,91,92,95,97,98,100,102,],[-18,32,-42,-42,-17,32,-42,-42,-42,-16,-19,-20,-42,-21,]),'ELSE':([20,31,57,67,78,85,89,91,92,93,95,97,98,100,102,],[-18,49,-42,-42,-17,-22,-42,-42,-42,-23,-16,-19,-20,-42,-21,]),'NUMBER':([21,26,29,32,33,37,41,43,45,46,55,58,61,62,63,68,69,70,71,72,73,75,80,],[30,36,47,47,47,47,47,47,-33,-34,76,47,47,-37,-38,47,-25,-26,-27,-28,-29,47,47,]),'LPAREN':([23,28,29,32,33,37,41,43,45,46,58,59,61,62,63,68,69,70,71,72,73,75,80,],[33,37,41,41,41,41,41,41,-33,-34,41,80,41,-37,-38,41,-25,-26,-27,-28,-29,41,41,]),'PLUS':([29,32,38,39,41,42,44,47,51,60,64,68,69,70,71,72,73,79,81,82,86,],[45,45,-39,45,45,-30,-35,-40,45,45,-31,45,-25,-26,-27,-28,-29,-32,-41,-36,45,]),'MINUS':([29,32,38,39,41,42,44,47,51,60,64,68,69,70,71,72,73,79,81,82,86,],[46,46,-39,46,46,-30,-35,-40,46,46,-31,46,-25,-26,-27,-28,-29,-32,-41,-36,46,]),'LOOPS':([30,],[48,]),'RPAREN':([33,37,38,42,44,47,52,53,54,56,60,64,79,80,81,82,88,90,],[-42,-42,-39,-30,-35,-40,74,-13,-15,77,81,-31,-32,-42,-41,-36,-14,96,]),'TIMES':([38,42,44,47,64,79,81,82,],[-39,62,-35,-40,62,62,-41,-36,]),'DIVIDE':([38,42,44,47,64,79,81,82,],[-39,63,-35,-40,63,63,-41,-36,]),'EQUAL':([38,42,44,47,51,64,79,81,82,],[-39,-30,-35,-40,69,-31,-32,-41,-36,]),'GT':([38,42,44,47,51,64,79,81,82,],[-39,-30,-35,-40,70,-31,-32,-41,-36,]),'GTE':([38,42,44,47,51,64,79,81,82,],[-39,-30,-35,-40,71,-31,-32,-41,-36,]),'LT':([38,42,44,47,51,64,79,81,82,],[-39,-30,-35,-40,72,-31,-32,-41,-36,]),'LTE':([38,42,44,47,51,64,79,81,82,],[-39,-30,-35,-40,73,-31,-32,-41,-36,]),'THEN':([38,42,44,47,50,64,79,81,82,86,],[-39,-30,-35,-40,67,-31,-32,-41,-36,-24,]),'BEGIN':([74,],[87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'importDeclare':([2,16,],[3,27,]),'empty':([2,3,7,11,16,24,33,37,48,49,57,67,80,87,89,91,92,100,101,],[5,9,13,20,5,9,54,54,20,20,20,20,54,9,20,20,20,20,13,]),'block':([3,87,],[6,94,]),'varDeclare':([3,24,87,],[7,34,7,]),'procedureDeclare':([7,101,],[11,103,]),'varDeclareList':([8,],[14,]),'statement':([11,48,49,57,67,89,91,92,100,],[17,65,66,78,85,95,97,98,102,]),'caseList':([22,85,],[31,93,]),'expression':([29,32,41,68,],[39,51,60,86,]),'term':([29,32,41,43,58,68,],[42,42,42,64,79,42,]),'addOperator':([29,32,39,41,51,60,68,86,],[43,43,58,43,58,58,43,58,]),'factor':([29,32,33,37,41,43,58,61,68,75,80,],[44,44,53,53,44,44,44,82,44,88,53,]),'condition':([32,],[50,]),'parameter':([33,37,80,],[52,56,90,]),'multiOperator':([42,64,79,],[61,61,61,]),'relation':([51,],[68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> COMMENT importDeclare block','program',3,'p_program','SyntacticAnalisis.py',23),
  ('block -> varDeclare procedureDeclare statement','block',3,'p_block','SyntacticAnalisis.py',30),
  ('importDeclare -> IMPORT DOC SEMMICOLOM importDeclare','importDeclare',4,'p_importDeclare1','SyntacticAnalisis.py',36),
  ('importDeclare -> empty','importDeclare',1,'p_importDeclare2','SyntacticAnalisis.py',40),
  ('varDeclare -> DECLARE varDeclareList SEMMICOLOM varDeclare','varDeclare',4,'p_varDeclare1','SyntacticAnalisis.py',45),
  ('varDeclare -> empty','varDeclare',1,'p_varDeclare2','SyntacticAnalisis.py',49),
  ('varDeclareList -> ID','varDeclareList',1,'p_varDeclareList1','SyntacticAnalisis.py',53),
  ('varDeclareList -> varDeclareList COMMA ID','varDeclareList',3,'p_varDeclareList2','SyntacticAnalisis.py',57),
  ('varDeclareList -> ID ASSIGN NUMBER','varDeclareList',3,'p_varDeclareList3','SyntacticAnalisis.py',61),
  ('varDeclareList -> varDeclareList COMMA ID ASSIGN NUMBER','varDeclareList',5,'p_varDeclareList4','SyntacticAnalisis.py',65),
  ('procedureDeclare -> PROCEDURE ID LPAREN parameter RPAREN BEGIN block END SEMMICOLOM procedureDeclare','procedureDeclare',10,'p_procedureDeclare1','SyntacticAnalisis.py',72),
  ('procedureDeclare -> empty','procedureDeclare',1,'p_procedureDeclare2','SyntacticAnalisis.py',76),
  ('parameter -> factor','parameter',1,'p_parameter1','SyntacticAnalisis.py',80),
  ('parameter -> parameter COMMA factor','parameter',3,'p_parameter2','SyntacticAnalisis.py',84),
  ('parameter -> empty','parameter',1,'p_parameter3','SyntacticAnalisis.py',88),
  ('statement -> CALL ID LPAREN parameter RPAREN SEMMICOLOM statement','statement',7,'p_statement1','SyntacticAnalisis.py',94),
  ('statement -> ID ASSIGN expression SEMMICOLOM statement','statement',5,'p_statement2','SyntacticAnalisis.py',99),
  ('statement -> empty','statement',1,'p_statement3','SyntacticAnalisis.py',104),
  ('statement -> FOR NUMBER LOOPS statement END SEMMICOLOM statement','statement',7,'p_statement4','SyntacticAnalisis.py',109),
  ('statement -> CASE caseList ELSE statement END SEMMICOLOM statement','statement',7,'p_statement5','SyntacticAnalisis.py',114),
  ('statement -> ID ASSIGN CALL ID LPAREN parameter RPAREN SEMMICOLOM statement','statement',9,'p_statement6','SyntacticAnalisis.py',119),
  ('caseList -> WHEN condition THEN statement','caseList',4,'p_caseList1','SyntacticAnalisis.py',123),
  ('caseList -> WHEN condition THEN statement caseList','caseList',5,'p_caseList2','SyntacticAnalisis.py',128),
  ('condition -> expression relation expression','condition',3,'p_condition','SyntacticAnalisis.py',135),
  ('relation -> EQUAL','relation',1,'p_relation1','SyntacticAnalisis.py',139),
  ('relation -> GT','relation',1,'p_relation2','SyntacticAnalisis.py',143),
  ('relation -> GTE','relation',1,'p_relation3','SyntacticAnalisis.py',147),
  ('relation -> LT','relation',1,'p_relation4','SyntacticAnalisis.py',151),
  ('relation -> LTE','relation',1,'p_relation5','SyntacticAnalisis.py',155),
  ('expression -> term','expression',1,'p_expression1','SyntacticAnalisis.py',159),
  ('expression -> addOperator term','expression',2,'p_expression2','SyntacticAnalisis.py',163),
  ('expression -> expression addOperator term','expression',3,'p_expression3','SyntacticAnalisis.py',167),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator1','SyntacticAnalisis.py',171),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator2','SyntacticAnalisis.py',175),
  ('term -> factor','term',1,'p_term1','SyntacticAnalisis.py',179),
  ('term -> term multiOperator factor','term',3,'p_term2','SyntacticAnalisis.py',183),
  ('multiOperator -> TIMES','multiOperator',1,'p_multiOperator1','SyntacticAnalisis.py',187),
  ('multiOperator -> DIVIDE','multiOperator',1,'p_multiOperator2','SyntacticAnalisis.py',191),
  ('factor -> ID','factor',1,'p_factor1','SyntacticAnalisis.py',195),
  ('factor -> NUMBER','factor',1,'p_factor2','SyntacticAnalisis.py',199),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor3','SyntacticAnalisis.py',203),
  ('empty -> <empty>','empty',0,'p_empty','SyntacticAnalisis.py',207),
]
