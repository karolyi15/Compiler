
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDCALLBEGINDOCrightPROCEDURErightDECLARErightASSIGNleftPLUSMINUSleftTIMESDIVIDEleftLPARENRPARENASSIGN BEGIN CALL CASE COMMA COMMENT DECLARE DIVIDE DOC ELSE END EQUAL FOR GT GTE ID IMPORT LOOPS LPAREN LT LTE MINUS NUMBER PLUS PROCEDURE RPAREN SEMMICOLOM THEN TIMES WHENprogram : COMMENT importDeclare blockblock : varDeclare procedureDeclare statementimportDeclare : IMPORT DOC SEMMICOLOM importDeclareimportDeclare : emptyvarDeclare : DECLARE varDeclareList SEMMICOLOM varDeclarevarDeclare : emptyvarDeclareList : IDvarDeclareList : varDeclareList COMMA IDvarDeclareList : ID ASSIGN NUMBERvarDeclareList : varDeclareList COMMA ID ASSIGN NUMBERprocedureDeclare : PROCEDURE ID LPAREN parameter RPAREN BEGIN block END SEMMICOLOM procedureDeclareprocedureDeclare : emptyparameter : factorparameter : parameter COMMA factorparameter : emptystatement : CALL ID LPAREN parameter RPAREN SEMMICOLOM statementstatement : ID ASSIGN expression SEMMICOLOM statementstatement : emptystatement : FOR NUMBER LOOPS statement END SEMMICOLOM statementstatement : CASE caseList ELSE statement END SEMMICOLOM statementcaseList : WHEN condition THEN statementcaseList : WHEN condition THEN statement caseListcondition : expression relation expressionrelation : EQUALrelation : GTrelation : GTErelation : LTrelation : LTEexpression : termexpression : addOperator termexpression : expression addOperator termaddOperator : PLUSaddOperator : MINUSterm : factorterm : term multiOperator factormultiOperator : TIMESmultiOperator : DIVIDEfactor : IDfactor : NUMBERfactor : LPAREN expression RPARENempty :'
    
_lr_action_items = {'COMMENT':([0,],[2,]),'$end':([1,2,3,5,6,7,9,11,13,16,17,20,24,27,34,56,76,86,87,88,91,92,93,95,96,],[0,-41,-41,-4,-1,-41,-6,-41,-12,-41,-2,-18,-41,-3,-5,-41,-17,-41,-41,-41,-16,-19,-20,-41,-11,]),'IMPORT':([2,16,],[4,4,]),'DECLARE':([2,3,5,16,24,27,84,],[-41,8,-4,-41,8,-3,8,]),'PROCEDURE':([2,3,5,7,9,16,24,27,34,84,95,],[-41,-41,-4,12,-6,-41,-41,-3,-5,-41,12,]),'CALL':([2,3,5,7,9,11,13,16,24,27,34,47,48,56,65,84,86,87,88,95,96,],[-41,-41,-4,-41,-6,18,-12,-41,-41,-3,-5,18,18,18,18,-41,18,18,18,-41,-11,]),'ID':([2,3,5,7,8,9,11,12,13,16,18,24,25,27,29,32,33,34,37,41,43,44,46,47,48,56,57,58,59,60,65,66,67,68,69,70,71,73,84,86,87,88,95,96,],[-41,-41,-4,-41,15,-6,19,23,-12,-41,28,-41,35,-3,38,38,38,-5,38,38,-32,-33,38,19,19,19,38,38,-36,-37,19,38,-24,-25,-26,-27,-28,38,-41,19,19,19,-41,-11,]),'FOR':([2,3,5,7,9,11,13,16,24,27,34,47,48,56,65,84,86,87,88,95,96,],[-41,-41,-4,-41,-6,21,-12,-41,-41,-3,-5,21,21,21,21,-41,21,21,21,-41,-11,]),'CASE':([2,3,5,7,9,11,13,16,24,27,34,47,48,56,65,84,86,87,88,95,96,],[-41,-41,-4,-41,-6,22,-12,-41,-41,-3,-5,22,22,22,22,-41,22,22,22,-41,-11,]),'DOC':([4,],[10,]),'END':([7,9,11,13,17,20,24,34,47,48,56,63,64,76,84,86,87,88,90,91,92,93,95,96,],[-41,-6,-41,-12,-2,-18,-41,-5,-41,-41,-41,80,81,-17,-41,-41,-41,-41,94,-16,-19,-20,-41,-11,]),'SEMMICOLOM':([10,14,15,35,36,38,39,40,42,45,61,74,75,77,78,79,80,81,94,],[16,24,-7,-8,-9,-38,56,-29,-34,-39,-30,-10,86,-31,-35,-40,87,88,95,]),'COMMA':([14,15,33,35,36,37,38,45,51,52,53,55,74,79,85,],[25,-7,-41,-8,-9,-41,-38,-39,73,-13,-15,73,-10,-40,-14,]),'ASSIGN':([15,19,35,],[26,29,54,]),'WHEN':([20,22,56,65,76,82,86,87,88,91,92,93,],[-18,32,-41,-41,-17,32,-41,-41,-41,-16,-19,-20,]),'ELSE':([20,31,56,65,76,82,86,87,88,89,91,92,93,],[-18,48,-41,-41,-17,-21,-41,-41,-41,-22,-16,-19,-20,]),'NUMBER':([21,26,29,32,33,37,41,43,44,46,54,57,58,59,60,66,67,68,69,70,71,73,],[30,36,45,45,45,45,45,-32,-33,45,74,45,45,-36,-37,45,-24,-25,-26,-27,-28,45,]),'LPAREN':([23,28,29,32,33,37,41,43,44,46,57,58,59,60,66,67,68,69,70,71,73,],[33,37,46,46,46,46,46,-32,-33,46,46,46,-36,-37,46,-24,-25,-26,-27,-28,46,]),'PLUS':([29,32,38,39,40,42,45,46,50,61,62,66,67,68,69,70,71,77,78,79,83,],[43,43,-38,43,-29,-34,-39,43,43,-30,43,43,-24,-25,-26,-27,-28,-31,-35,-40,43,]),'MINUS':([29,32,38,39,40,42,45,46,50,61,62,66,67,68,69,70,71,77,78,79,83,],[44,44,-38,44,-29,-34,-39,44,44,-30,44,44,-24,-25,-26,-27,-28,-31,-35,-40,44,]),'LOOPS':([30,],[47,]),'RPAREN':([33,37,38,40,42,45,51,52,53,55,61,62,77,78,79,85,],[-41,-41,-38,-29,-34,-39,72,-13,-15,75,-30,79,-31,-35,-40,-14,]),'TIMES':([38,40,42,45,61,77,78,79,],[-38,59,-34,-39,59,59,-35,-40,]),'DIVIDE':([38,40,42,45,61,77,78,79,],[-38,60,-34,-39,60,60,-35,-40,]),'EQUAL':([38,40,42,45,50,61,77,78,79,],[-38,-29,-34,-39,67,-30,-31,-35,-40,]),'GT':([38,40,42,45,50,61,77,78,79,],[-38,-29,-34,-39,68,-30,-31,-35,-40,]),'GTE':([38,40,42,45,50,61,77,78,79,],[-38,-29,-34,-39,69,-30,-31,-35,-40,]),'LT':([38,40,42,45,50,61,77,78,79,],[-38,-29,-34,-39,70,-30,-31,-35,-40,]),'LTE':([38,40,42,45,50,61,77,78,79,],[-38,-29,-34,-39,71,-30,-31,-35,-40,]),'THEN':([38,40,42,45,49,61,77,78,79,83,],[-38,-29,-34,-39,65,-30,-31,-35,-40,-23,]),'BEGIN':([72,],[84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'importDeclare':([2,16,],[3,27,]),'empty':([2,3,7,11,16,24,33,37,47,48,56,65,84,86,87,88,95,],[5,9,13,20,5,9,53,53,20,20,20,20,9,20,20,20,13,]),'block':([3,84,],[6,90,]),'varDeclare':([3,24,84,],[7,34,7,]),'procedureDeclare':([7,95,],[11,96,]),'varDeclareList':([8,],[14,]),'statement':([11,47,48,56,65,86,87,88,],[17,63,64,76,82,91,92,93,]),'caseList':([22,82,],[31,89,]),'expression':([29,32,46,66,],[39,50,62,83,]),'term':([29,32,41,46,57,66,],[40,40,61,40,77,40,]),'addOperator':([29,32,39,46,50,62,66,83,],[41,41,57,41,57,57,41,57,]),'factor':([29,32,33,37,41,46,57,58,66,73,],[42,42,52,52,42,42,42,78,42,85,]),'condition':([32,],[49,]),'parameter':([33,37,],[51,55,]),'multiOperator':([40,61,77,],[58,58,58,]),'relation':([50,],[66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> COMMENT importDeclare block','program',3,'p_program','SyntacticAnalisis.py',23),
  ('block -> varDeclare procedureDeclare statement','block',3,'p_block','SyntacticAnalisis.py',30),
  ('importDeclare -> IMPORT DOC SEMMICOLOM importDeclare','importDeclare',4,'p_importDeclare1','SyntacticAnalisis.py',36),
  ('importDeclare -> empty','importDeclare',1,'p_importDeclare2','SyntacticAnalisis.py',40),
  ('varDeclare -> DECLARE varDeclareList SEMMICOLOM varDeclare','varDeclare',4,'p_varDeclare1','SyntacticAnalisis.py',45),
  ('varDeclare -> empty','varDeclare',1,'p_varDeclare2','SyntacticAnalisis.py',49),
  ('varDeclareList -> ID','varDeclareList',1,'p_varDeclareList1','SyntacticAnalisis.py',53),
  ('varDeclareList -> varDeclareList COMMA ID','varDeclareList',3,'p_varDeclareList2','SyntacticAnalisis.py',57),
  ('varDeclareList -> ID ASSIGN NUMBER','varDeclareList',3,'p_varDeclareList3','SyntacticAnalisis.py',61),
  ('varDeclareList -> varDeclareList COMMA ID ASSIGN NUMBER','varDeclareList',5,'p_varDeclareList4','SyntacticAnalisis.py',66),
  ('procedureDeclare -> PROCEDURE ID LPAREN parameter RPAREN BEGIN block END SEMMICOLOM procedureDeclare','procedureDeclare',10,'p_procedureDeclare1','SyntacticAnalisis.py',73),
  ('procedureDeclare -> empty','procedureDeclare',1,'p_procedureDeclare2','SyntacticAnalisis.py',77),
  ('parameter -> factor','parameter',1,'p_parameter1','SyntacticAnalisis.py',81),
  ('parameter -> parameter COMMA factor','parameter',3,'p_parameter2','SyntacticAnalisis.py',85),
  ('parameter -> empty','parameter',1,'p_parameter3','SyntacticAnalisis.py',89),
  ('statement -> CALL ID LPAREN parameter RPAREN SEMMICOLOM statement','statement',7,'p_statement1','SyntacticAnalisis.py',95),
  ('statement -> ID ASSIGN expression SEMMICOLOM statement','statement',5,'p_statement2','SyntacticAnalisis.py',100),
  ('statement -> empty','statement',1,'p_statement3','SyntacticAnalisis.py',105),
  ('statement -> FOR NUMBER LOOPS statement END SEMMICOLOM statement','statement',7,'p_statement4','SyntacticAnalisis.py',110),
  ('statement -> CASE caseList ELSE statement END SEMMICOLOM statement','statement',7,'p_statement5','SyntacticAnalisis.py',115),
  ('caseList -> WHEN condition THEN statement','caseList',4,'p_caseList1','SyntacticAnalisis.py',120),
  ('caseList -> WHEN condition THEN statement caseList','caseList',5,'p_caseList2','SyntacticAnalisis.py',125),
  ('condition -> expression relation expression','condition',3,'p_condition','SyntacticAnalisis.py',132),
  ('relation -> EQUAL','relation',1,'p_relation1','SyntacticAnalisis.py',136),
  ('relation -> GT','relation',1,'p_relation2','SyntacticAnalisis.py',140),
  ('relation -> GTE','relation',1,'p_relation3','SyntacticAnalisis.py',144),
  ('relation -> LT','relation',1,'p_relation4','SyntacticAnalisis.py',148),
  ('relation -> LTE','relation',1,'p_relation5','SyntacticAnalisis.py',152),
  ('expression -> term','expression',1,'p_expression1','SyntacticAnalisis.py',156),
  ('expression -> addOperator term','expression',2,'p_expression2','SyntacticAnalisis.py',160),
  ('expression -> expression addOperator term','expression',3,'p_expression3','SyntacticAnalisis.py',164),
  ('addOperator -> PLUS','addOperator',1,'p_addOperator1','SyntacticAnalisis.py',168),
  ('addOperator -> MINUS','addOperator',1,'p_addOperator2','SyntacticAnalisis.py',172),
  ('term -> factor','term',1,'p_term1','SyntacticAnalisis.py',176),
  ('term -> term multiOperator factor','term',3,'p_term2','SyntacticAnalisis.py',180),
  ('multiOperator -> TIMES','multiOperator',1,'p_multiOperator1','SyntacticAnalisis.py',184),
  ('multiOperator -> DIVIDE','multiOperator',1,'p_multiOperator2','SyntacticAnalisis.py',188),
  ('factor -> ID','factor',1,'p_factor1','SyntacticAnalisis.py',192),
  ('factor -> NUMBER','factor',1,'p_factor2','SyntacticAnalisis.py',196),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor3','SyntacticAnalisis.py',200),
  ('empty -> <empty>','empty',0,'p_empty','SyntacticAnalisis.py',204),
]
